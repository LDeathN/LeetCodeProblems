#First Problem (433)
class Solution(object):
    from collections import deque

    def minMutation(self, startGene, endGene, bank):
        if endGene not in bank:
            return -1

        bank_set = set(bank)
        visited = set()
        queue = deque([(startGene, 0)]) 
        visited.add(startGene)

        gene_chars = ['A', 'C', 'G', 'T']

        while queue:
            current_gene, current_step = queue.popleft()

            for i in range(len(current_gene)):
                for char in gene_chars:
                    if char == current_gene[i]:
                        continue

                    mutated_gene = current_gene[:i] + char + current_gene[i+1:]

                    if mutated_gene == endGene:
                        return current_step + 1

                    if mutated_gene in bank_set and mutated_gene not in visited:
                        visited.add(mutated_gene)
                        queue.append((mutated_gene, current_step + 1))

        return -1




