#First Problem (835)
class Solution(object):
    def new21Game(self, n, k, maxPts):
        if k == 0 or n >= k + maxPts:
            return 1.0  
        
        dp = [0.0] * (n + 1)
        dp[0] = 1.0  
        window_sum = 1.0  
        result = 0.0

        for i in range(1, n + 1):
            dp[i] = window_sum / maxPts 
            
            if i < k:
                window_sum += dp[i]  
            else:
                result += dp[i]  
            
            if i >= maxPts:
                window_sum -= dp[i - maxPts]  
        
        return result



#Second Problem (838)
class Solution(object):
    def pushDominoes(self, dominoes):
        n = len(dominoes)
        forces = [0] * n

        force = 0
        for i in range(n):
            if dominoes[i] == 'R':
                force = n  
            elif dominoes[i] == 'L':
                force = 0 
            else:
                force = max(force - 1, 0)  
            forces[i] += force

        force = 0
        for i in range(n - 1, -1, -1):
            if dominoes[i] == 'L':
                force = n  
            elif dominoes[i] == 'R':
                force = 0  
            else:
                force = max(force - 1, 0)  
            forces[i] -= force

        result = []
        for f in forces:
            if f > 0:
                result.append('R')
            elif f < 0:
                result.append('L')
            else:
                result.append('.')

        return ''.join(result)




