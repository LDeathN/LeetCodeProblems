#First Problem (998)
class Solution(object):
    def insertIntoMaxTree(self, root, val):
        if not root:
            return TreeNode(val)
        
        if val > root.val:
            new_root = TreeNode(val)
            new_root.left = root
            return new_root
        
        root.right = self.insertIntoMaxTree(root.right, val)
        return root



#Second Problem (1003)
class Solution(object):
    def isValid(self, s):
        stack = []
    
        for char in s:
            stack.append(char)
            if len(stack) >= 3 and stack[-3:] == ['a', 'b', 'c']:
                stack.pop() 
                stack.pop()  
                stack.pop()  
        
        return len(stack) == 0




