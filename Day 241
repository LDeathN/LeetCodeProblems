#First Problem 1291
class Solution(object):
    def sequentialDigits(self, low, high):
        result = []
    
        for start in range(1, 10):
            num = start
            next_digit = start
            
            while num <= high and next_digit < 10:
                if num >= low:
                    result.append(num)
                
                next_digit += 1
                num = num * 10 + next_digit
        
        return sorted(result)



#Second Problem 1292
class Solution(object):
    def maxSideLength(self, mat, threshold):
        m, n = len(mat), len(mat[0])
    
        prefix = [[0] * (n + 1) for _ in range(m + 1)]
        for i in range(1, m + 1):
            for j in range(1, n + 1):
                prefix[i][j] = (
                    mat[i - 1][j - 1]
                    + prefix[i - 1][j]
                    + prefix[i][j - 1]
                    - prefix[i - 1][j - 1]
                )
        
        def canFindSquare(k):
            for i in range(k, m + 1):
                for j in range(k, n + 1):
                    square_sum = (
                        prefix[i][j]
                        - prefix[i - k][j]
                        - prefix[i][j - k]
                        + prefix[i - k][j - k]
                    )
                    if square_sum <= threshold:
                        return True
            return False
        
        left, right = 0, min(m, n)
        result = 0
        while left <= right:
            mid = (left + right) // 2
            if canFindSquare(mid):
                result = mid 
                left = mid + 1
            else:
                right = mid - 1
        
        return result



#Third Problem 1296
class Solution(object):
    def isPossibleDivide(self, nums, k):
        if len(nums) % k != 0:
            return False
        
        count = Counter(nums)
        
        for num in sorted(count):
            if count[num] > 0: 
                freq = count[num]
                for i in range(num, num + k):
                    if count[i] < freq:  
                        return False
                    count[i] -= freq  
        
        return True




