#First Problem (811)
class Solution(object):
    def subdomainVisits(self, cpdomains):
        from collections import defaultdict

        domain_counts = defaultdict(int)
        
        for cpdomain in cpdomains:
            count, domain = cpdomain.split()
            count = int(count)
            
            subdomains = domain.split('.')
            
            for i in range(len(subdomains)):
                subdomain = '.'.join(subdomains[i:])
                domain_counts[subdomain] += count
        
        result = []
        for domain, count in domain_counts.items():
            result.append(str(count) + " " + domain)
        
        return result



#Second Problem (814)
class Solution(object):
    def pruneTree(self, root):
        if not root:
            return None
        
        root.left = self.pruneTree(root.left)
        root.right = self.pruneTree(root.right)
        
        if root.val == 0 and not root.left and not root.right:
            return None
        
        return root




