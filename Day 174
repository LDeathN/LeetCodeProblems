#First Problem (402)
class Solution(object):
    def removeKdigits(self, num, k):
        stack = []
    
        for digit in num:
            while k > 0 and stack and stack[-1] > digit:
                stack.pop()
                k -= 1
            stack.append(digit)
        
        stack = stack[:len(stack) - k]
        
        result = ''.join(stack).lstrip('0')
        
        return result if result else "0"



#Second Problem (406)
class Solution(object):
    def reconstructQueue(self, people):
        people.sort(key=lambda x: (-x[0], x[1]))

        queue = []

        for person in people:
            queue.insert(person[1], person)
        
        return queue



#Third Problem (413)
class Solution(object):
    def numberOfArithmeticSlices(self, nums):
        n = len(nums)
        if n < 3:
            return 0

        count = 0
        current = 0

        for i in range(2, n):
            if nums[i] - nums[i-1] == nums[i-1] - nums[i-2]:
                current += 1
                count += current
            else:
                current = 0

        return count




