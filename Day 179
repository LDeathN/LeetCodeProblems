#First Problem (456)
class Solution(object):
    def find132pattern(self, nums):
        third = float('-inf')
        stack = []

        for i in range(len(nums) - 1, -1, -1):
            if nums[i] < third:
                return True
            while stack and stack[-1] < nums[i]:
                third = stack.pop()
            stack.append(nums[i])

        return False



Second Problem (457)
class Solution(object):
    def circularArrayLoop(self, nums):
        n = len(nums)

        def next_index(i):
            return (i + nums[i]) % n

        for i in range(n):
            if nums[i] == 0:
                continue

            slow, fast = i, i

            direction = nums[i] > 0

            while True:
                slow = next_index(slow)
                fast = next_index(fast)
                if nums[fast] * nums[i] <= 0:  
                    break
                fast = next_index(fast)
                if nums[fast] * nums[i] <= 0:  
                    break

                if slow == fast:
                    if slow == next_index(slow):
                        break
                    return True

            slow = i
            while nums[slow] * nums[i] > 0:
                next_idx = next_index(slow)
                nums[slow] = 0
                slow = next_idx

        return False




