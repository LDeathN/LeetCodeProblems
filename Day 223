#First Problem (1017)
class Solution(object):
    def baseNeg2(self, n):
        if n == 0:
            return "0"
        
        result = []
        while n != 0:
            remainder = n % -2
            n //= -2
            if remainder < 0:
                remainder += 2
                n += 1
            result.append(str(remainder))
        
        return ''.join(result[::-1])



#Second Problem (1019)
class Solution(object):
    def nextLargerNodes(self, head):
        values = []
        while head:
            values.append(head.val)
            head = head.next
        
        result = [0] * len(values)
        stack = [] 
        
        for i in range(len(values)):
            while stack and values[i] > values[stack[-1]]:
                index = stack.pop()
                result[index] = values[i]
            stack.append(i)
        
        return result




