#First Problem 1493
class Solution(object):
    def longestSubarray(self, nums):
        left = 0
        zero_count = 0
        max_length = 0
        
        for right in range(len(nums)):
            if nums[right] == 0:
                zero_count += 1
            
            while zero_count > 1:
                if nums[left] == 0:
                    zero_count -= 1
                left += 1
            
            max_length = max(max_length, right - left)
        
        return max_length



#Second Problem 1497
class Solution(object):
    def canArrange(self, arr, k):
        freq = [0] * k
    
        for num in arr:
            rem = num % k
            if rem < 0:  
                rem += k
            freq[rem] += 1
        
        for i in range(k):
            if i == 0:  
                if freq[i] % 2 != 0:
                    return False
            elif i <= k // 2:  
                if freq[i] != freq[k - i]:
                    return False
        
        return True




