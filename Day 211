#First Problem (901)
class StockSpanner(object):

    def __init__(self):
        self.stack = []

    def next(self, price):
        span = 1  
        while self.stack and self.stack[-1][0] <= price:
            span += self.stack.pop()[1]  
        self.stack.append((price, span))
        return span



#Second Problem (904)
class Solution(object):
    def totalFruit(self, fruits):
        max_fruits = 0
        left = 0
        fruit_count = defaultdict(int)  

        for right in range(len(fruits)):
            fruit_count[fruits[right]] += 1  

            while len(fruit_count) > 2:
                fruit_count[fruits[left]] -= 1
                if fruit_count[fruits[left]] == 0:
                    del fruit_count[fruits[left]]  
                left += 1  

            max_fruits = max(max_fruits, right - left + 1)

        return max_fruits




