#First Problem 1277
class Solution(object):
    def countSquares(self, matrix):
        m, n = len(matrix), len(matrix[0])
        dp = [[0] * n for _ in range(m)]
        total_squares = 0

        for i in range(m):
            for j in range(n):
                if matrix[i][j] == 1:
                    if i == 0 or j == 0: 
                        dp[i][j] = 1
                    else:
                        dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1
                    total_squares += dp[i][j]
        
        return total_squares



#Second Problem 1282
class Solution(object):
    def groupThePeople(self, groupSizes):
        from collections import defaultdict

        size_to_people = defaultdict(list)
        result = []

        for person, group_size in enumerate(groupSizes):
            size_to_people[group_size].append(person)
            if len(size_to_people[group_size]) == group_size:
                result.append(size_to_people[group_size])
                size_to_people[group_size] = [] 

        return result




