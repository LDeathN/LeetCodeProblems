#First Problem (396)
class Solution(object):
    def maxRotateFunction(self, nums):
        n = len(nums)
        sum_nums = sum(nums)

        F = sum(i * num for i, num in enumerate(nums))
        
        max_value = F  

        for k in range(1, n):
            F = F + sum_nums - n * nums[n - k]
            max_value = max(max_value, F)
        
        return max_value



#Second Problem (397)
class Solution(object):
    def integerReplacement(self, n):
        operations = 0
        while n > 1:
            if n % 2 == 0:
                n //= 2
            elif n == 3 or (n - 1) % 4 == 0:
                n -= 1
            else:
                n += 1
            operations += 1
        return operations




