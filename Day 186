#First Problem (539)
class Solution(object):
    def findMinDifference(self, timePoints):
        minutes = []
        for time in timePoints:
            hours, mins = map(int, time.split(":"))
            total_minutes = hours * 60 + mins
            minutes.append(total_minutes)

        minutes.sort()

        min_diff = 1440 + minutes[0] - minutes[-1] 

        for i in range(1, len(minutes)):
            min_diff = min(min_diff, minutes[i] - minutes[i - 1])
        
        return min_diff



#Second Problem (540)
class Solution(object):
    def singleNonDuplicate(self, nums):
        left, right = 0, len(nums) - 1
    
        while left < right:
            mid = left + (right - left) // 2
            
            if mid % 2 == 1:
                mid -= 1
                
            if nums[mid] == nums[mid + 1]:
                left = mid + 2
            else:
                right = mid
                
        return nums[left]





