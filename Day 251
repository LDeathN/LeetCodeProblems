#First Problem 1415
class Solution(object):
    def getHappyString(self, n, k):
        def helper(n, k, last_char):
            if n == 0:
                return ""
            
            chunk_size = 2 ** (n - 1)
            for char in ['a', 'b', 'c']:
                if char != last_char:
                    if k <= chunk_size:
                        return char + helper(n - 1, k, char)
                    k -= chunk_size
            
            return ""
        
        total_happy_strings = 3 * (2 ** (n - 1))  
        return helper(n, k, "") if k <= total_happy_strings else ""



#Second Problem 1418
class Solution(object):
    def displayTable(self, orders):
        food_items = set()
        table_counts = defaultdict(lambda: defaultdict(int))

        for _, table, food in orders:
            food_items.add(food)
            table_counts[table][food] += 1

        sorted_food_items = sorted(food_items)
        sorted_tables = sorted(table_counts.keys(), key=int)

        result = [["Table"] + sorted_food_items]

        for table in sorted_tables:
            row = [table]
            for food in sorted_food_items:
                row.append(str(table_counts[table].get(food, 0)))
            result.append(row)

        return result




