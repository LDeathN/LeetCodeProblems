#First Problem (442)
class Solution(object):
    def findDuplicates(self, nums):
        result = []
    
        for num in nums:
            index = abs(num) - 1

            if nums[index] < 0:
                result.append(abs(num))
            else:
                nums[index] = -nums[index]
        
        return result



#Second Problem (443)
class Solution(object):
    def compress(self, chars):
        write = 0
        read = 0
        n = len(chars)
        
        while read < n:
            current_char = chars[read]
            count = 0

            while read < n and chars[read] == current_char:
                read += 1
                count += 1
            
            chars[write] = current_char
            write += 1

            if count > 1:
                for digit in str(count):
                    chars[write] = digit
                    write += 1
        
        return write



#Third Problem (445)
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        stack1, stack2 = [], []

        while l1:
            stack1.append(l1.val)
            l1 = l1.next
            
        while l2:
            stack2.append(l2.val)
            l2 = l2.next
        
        carry = 0
        head = None

        while stack1 or stack2 or carry:
            sum_val = carry
            if stack1:
                sum_val += stack1.pop()
            if stack2:
                sum_val += stack2.pop()

            carry = sum_val // 10
            digit = sum_val % 10

            new_node = ListNode(digit)
            new_node.next = head
            head = new_node
        
        return head




