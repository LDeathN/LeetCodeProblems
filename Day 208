#First Problem (845)
class Solution(object):
    def longestMountain(self, arr):
        n = len(arr)
        if n < 3:
            return 0

        longest = 0
        i = 1

        while i < n - 1:
            if arr[i - 1] < arr[i] > arr[i + 1]:
                left = i - 1
                while left > 0 and arr[left - 1] < arr[left]:
                    left -= 1

                right = i + 1
                while right < n - 1 and arr[right] > arr[right + 1]:
                    right += 1

                length = right - left + 1
                longest = max(longest, length)

                i = right
            else:
                i += 1

        return longest



#Second Problem (846)
class Solution(object):
    def isNStraightHand(self, hand, groupSize):
        if len(hand) % groupSize != 0:
            return False

        count = Counter(hand)
        for card in sorted(count):
            while count[card] > 0:
                for i in range(groupSize):
                    if count[card + i] <= 0:
                        return False
                    count[card + i] -= 1
        return True




