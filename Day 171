#First Problem (380)
class RandomizedSet(object):
    import random

    def __init__(self):
        self.elements = []       
        self.index_map = {}

    def insert(self, val):
        if val in self.index_map:
            return False
        self.elements.append(val)

        self.index_map[val] = len(self.elements) - 1
        return True

    def remove(self, val):
        if val not in self.index_map:
            return False

        index_to_remove = self.index_map[val]
        last_element = self.elements[-1]

        self.elements[index_to_remove] = last_element
        self.index_map[last_element] = index_to_remove
        
        self.elements.pop()
        del self.index_map[val]
        
        return True
        

    def getRandom(self):
        return random.choice(self.elements)



#Second Problem (382)
class Solution(object):
    import random

    def __init__(self, head):
        self.head = head
        

    def getRandom(self):
        current = self.head
        chosen_value = current.val
        index = 1
        
        while current.next:
            current = current.next
            if random.randint(1, index + 1) == 1:
                chosen_value = current.val
            index += 1

        return chosen_value



#Third Problem (384)
class Solution(object):

    def __init__(self, nums):
        self.original = nums[:]
        self.array = nums[:]
        

    def reset(self):
        self.array = self.original[:]
        return self.array
        

    def shuffle(self):
        for i in range(len(self.array) - 1, 0, -1):
            j = random.randint(0, i)
            self.array[i], self.array[j] = self.array[j], self.array[i]
        return self.array




