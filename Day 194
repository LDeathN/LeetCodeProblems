#First Problem (669)
class Solution(object):
    def trimBST(self, root, low, high):
        if not root:
            return None

        if root.val < low:
            return self.trimBST(root.right, low, high)

        if root.val > high:
            return self.trimBST(root.left, low, high)

        root.left = self.trimBST(root.left, low, high)
        root.right = self.trimBST(root.right, low, high)
        
        return root



#Second Problem (670)
class Solution(object):
    def maximumSwap(self, num):
        digits = list(str(num))
        last = {int(x): i for i, x in enumerate(digits)}

        for i, digit in enumerate(digits):
            for d in range(9, int(digit), -1):
                if last.get(d, -1) > i:
                    digits[i], digits[last[d]] = digits[last[d]], digits[i]
                    return int("".join(digits))

        return num




