#First Problem 1561
class Solution(object):
    def maxCoins(self, piles):
        piles.sort(reverse=True)  
        n = len(piles) // 3      
        max_coins = 0

        for i in range(1, 2 * n, 2):
            max_coins += piles[i]

        return max_coins



#Second Problem 1562
class Solution(object):
    def findLatestStep(self, arr, m):
        n = len(arr)
        if m == n:
            return n 

        length = [0] * (n + 2) 
        count = [0] * (n + 1)  
        result = -1            

        for step, index in enumerate(arr, 1): 
            left = length[index - 1] 
            right = length[index + 1]  
            new_size = left + right + 1  

            if left > 0:
                count[left] -= 1
            if right > 0:
                count[right] -= 1

            count[new_size] += 1
            length[index - left] = new_size  
            length[index + right] = new_size  

            if count[m] > 0:
                result = step

        return result



#Third Problem 1567
class Solution(object):
    def getMaxLen(self, nums):
        positive_len = 0 
        negative_len = 0  
        max_len = 0    

        for num in nums:
            if num > 0:
                positive_len += 1
                negative_len = negative_len + 1 if negative_len > 0 else 0
            elif num < 0:
                positive_len, negative_len = (negative_len + 1 if negative_len > 0 else 0, positive_len + 1)
            else:
                positive_len = negative_len = 0  

            max_len = max(max_len, positive_len) 

        return max_len




